[{
	"id": "yd1",
	"hard": "1",
	"input": " 91 2 20 77\n",
	"answer": "2 20 77 91\n",
	"explain": "考察选择结构if条件判断，写出每个条件的真值，按照程序的逻辑依次执行代码",
	"code": "#include<iostream>\nusing namespace std;\nvoid swap(int &a,int &b)\n{\n    int t;\n    t=a;\n    a=b;\n    b=t;\n}\nint main()\n{\n    int a1,a2,a3,x;\n    cin>>a1>>a2>>a3;\n    if(a1>a2)\n       swap(a1,a2);\n    if(a2>a3)\n       swap(a2,a3);\n    if(a1>a2)\n       swap(a1,a2);\n    cin>>x;\n    if(x<a2)\n        if(x<a1)\n            cout<<x<<' '<<a1<<' '<<a2<<' '<<a3<<endl;\n        else\n            cout<<a1<<' '<<x<<' '<<a2<<' '<<a3<<endl;\n    else\n        if(x<a3)\n            cout<<a1<<' '<<a2<<' '<<x<<' '<<a3<<endl;\n        else\n            cout<<a1<<' '<<a2<<' '<<a3<<' '<<x<<endl;\n    return 0;\n}\n"
}, {
	"id": "yd2",
	"hard": "1",
	"input": " 90 120  \n",
	"answer": "99 101 111 \n",
	"explain": "rSum函数判断回文整数，输出循环范围内的回文整数",
	"code": "#include<iostream>\nusing namespace std;\nint rSum(int j) {\n    int sum=0;\n    while(j!=0) {\n        sum=sum*10+(j%10);\n        j=j/10;\n    }\n    return sum;\n}\nint main() {\n    int n,m,i;\n    cin>>n>>m;\n    for(i=n;i<m;i++)\n       if(i==rSum(i))\n           cout<<i<<' ';\n    return 0;\n}\n"
}, {
	"id": "yd3",
	"hard": "1",
	"input": "10 20\n",
	"answer": "165\n",
	"explain": "累加求和",
	"code": "#include <iostream>\nusing namespace std;\nint main() {\n    int i, n, m, ans;\n    cin >> n >> m;\n    i = n;\n    ans = 0;\n    while(i <= m) {\n        ans += i;\n        i++;\n    }\n    cout << ans << endl;\n    return 0;\n}\n"
}, {
	"id": "yd4",
	"hard": "1",
	"input": "CCF-NOIP-2011\n",
	"answer": "22366472011\n",
	"explain": "字符到数字的映射，手机键盘输入字符串的按键",
	"code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main() {\n    string map = \"22233344455566677778889999\";\n    string tel;\n    int i;\n    cin >> tel;\n    for(i = 0; i < tel.length(); i++)\n        if((tel[i] >= '0') && (tel[i] <= '9'))\n            cout << tel[i];\n        else if((tel[i] >= 'A') && (tel[i] <= 'Z'))\n            cout << map[tel[i] - 'A'];\n    cout << endl;\n    return 0;\n}\n"
}, {
	"id": "yd5",
	"hard": "1",
	"input": "18\n",
	"answer": "6\n",
	"explain": "统计输入数字的因子数量",
	"code": "#include <iostream>\nusing namespace std;\nint n,i,ans;\nint main() {\n cin>>n;\n ans=0;\n for(i=1;i<=n;i++)\n  if(n%i==0) ans++;\n cout<<ans<<endl;\n return 0; \n}\n"
}, {
	"id": "yd6",
	"hard": "1",
	"input": "1 100 15 \n",
	"answer": "6\n",
	"explain": "统计循环范围内，u的倍数有几个",
	"code": "#include <iostream> \nusing namespace std; \nint main() { \n int a, b, u, i, num; \n cin>>a>>b>>u; \n num = 0; \n for (i = a; i <= b; i++) \n  if ((i % u) == 0) \n   num++; \n cout<<num<<endl; \n return 0; \n} \n \n"
}, {
	"id": "yd7",
	"hard": "1",
	"input": "Hello, my name is Lostmonkey.\n",
	"answer": "HELLO, MY NAME IS LOSTMONKEY.\n",
	"explain": "字符串操作，转大写",
	"code": "#include<iostream>\n#include<string>\nusing namespace std;\nint main() {\n string st;\n int i, len;\n getline(cin, st);\n len = st.size();\n for (i=0; i < len; i++) {\n  if (st[i] >= 'a' && st[i] <= 'z')\n   st[i] = st[i] - 'a' + 'A';\n }\n cout << st << endl;\n return 0;\n} \n"
}, {
	"id": "yd8",
	"hard": "1",
	"input": null,
	"answer": "3\n",
	"explain": "条件判断",
	"code": "#include <iostream> \nusing namespace std; \nint main() { \n    int a, b, c; \n    a = 1; \n    b = 2; \n    c = 3; \n    if (a > b) { \n        if (a > c) \n            cout << a << ' '; \n        else \n            cout << b << ' '; \n    } \n  cout << c << endl; \n    return 0; \n} \n"
}, {
	"id": "yd9",
	"hard": "1",
	"input": null,
	"answer": "3,2\n",
	"explain": "结构体，看懂结构体的定义，会使用.访问结构体变量的属性",
	"code": "#include <iostream> \nusing namespace std; \nstruct point { \n    int x; \n    int y; \n}; \nint main() { \n    struct EX { \n        int a; \n        int b; \n        point c; \n    } e; \n    e.a = 1; \n    e.b = 2; \n    e.c.x = e.a + e.b; \n    e.c.y = e.a * e.b; \n    cout << e.c.x << ',' << e.c.y << endl; \n    return 0; \n} \n"
}, {
	"id": "yd10",
	"hard": "1",
	"input": "NOI2016 will be held in Mian Yang. \n",
	"answer": "It has 18 lowercases\n",
	"explain": "统计字符串中小写字符数量",
	"code": "#include <iostream> \n#include <string> \nusing namespace std; \nint main() { \n    string str; \n    int i; \n    int count; \n    count = 0; \n    getline(cin, str); \n    for (i = 0; i < str.length(); i++) { \n        if(str[i] >= 'a' && str[i] <= 'z') \n            count++; \n    } \n    cout << \"It has \" << count << \" lowercases\" << endl; \n    return 0; \n} \n \n"
}, {
	"id": "yd11",
	"hard": "1",
	"input": " 1 2 3 4 5 6 0 7 \n",
	"answer": "6,1,3\n",
	"explain": "统计最大值，最小值，平均数，输入遇0结束",
	"code": "#include <iostream> \nusing namespace std; \nint main() { \n    int max, min, sum, count = 0; \n    int tmp; \n    cin >> tmp; \n    if (tmp == 0) \n        return 0; \n    max = min = sum = tmp; \n    count++; \n    while (tmp != 0) { \n        cin >> tmp; \n        if (tmp != 0) { \n            sum += tmp; \n            count++; \n            if (tmp > max) \n                max = tmp; \n            if (tmp < min) \n                min = tmp; \n        } \n    } \n    cout << max << \",\" << min << \",\" << sum / count << endl; \n    return 0; \n} \n \n"
}, {
	"id": "yd12",
	"hard": "1",
	"input": null,
	"answer": "13\n",
	"explain": "统计循环范围内除8余1的数有几个",
	"code": "#include <iostream> \nusing namespace std; \nint main() { \n int i = 100, x = 0, y = 0; \n while (i > 0) { \n     i--; \n     x = i % 8; \n     if (x == 1) \n         y++; \n } \n cout << y << endl; \n return 0; \n} \n \n"
}, {
	"id": "yd13",
	"hard": "1",
	"input": "xyzxyw \n",
	"answer": "z\n",
	"explain": "统计字符出现次数，按照输入顺序输出第一个只出现一次的字符",
	"code": "#include<iostream>\nusing namespace std;\nint main() {\n int t[256];\n string s;\n int i;\n cin>>s;\n for (i = 0; i < 256; i++)\n  t[i] = 0;\n for(i = 0; i < s.length(); i++)\n  t[s[i]]++;\n for (i = 0; i < s.length(); i++)\n  if (t[s[i]]== 1) {\n  cout << s[i] << endl;\n  return 0;\n  }\n cout<< \"no\" << endl;\n return 0;\n}\n"
}, {
	"id": "yd14",
	"hard": "1",
	"input": "QuanGuoLianSai\n",
	"answer": "RuanHuoMianTai\n",
	"explain": "将所有大写字符ASCII数值+1，转换为下一个字符",
	"code": "#include <cstdio>\nchar st[100];\nint main() {\n scanf(\"%s\", st);\n for (int i = 0; st[i]; ++i) {\n  if ('A' <= st[i] && st[i] <= 'Z')\n   st[i] += 1;\n }\n printf(\"%s\n\", st);\n return 0;\n}\n"
}, {
	"id": "yd15",
	"hard": "1",
	"input": "15\n",
	"answer": "4\n",
	"explain": "统计循环范围内完全平方数模15为1的数有几个",
	"code": "#include <cstdio>\nint main() {\n int x;\n scanf(\"%d\", &x);\n int res = 0;\n for (int i = 0; i < x; ++i) {\n  if (i * i % x == 1) {\n   ++res;\n  }\n }\n printf(\"%d\", res);\n return 0;\n}\n"
}, {
	"id": "yd16",
	"hard": "1",
	"input": "4\n",
	"answer": "12\n",
	"explain": "",
	"code": "#include <iostream> \nusing namespace std; \nint main() { \n    int x[10][10],n,sum=0;\n    cin>>n;\n for(int i=0;i<n;i++)\n     for(int j=0;j<n;j++) {\n      x[i][j] = i+j;\n      if(i==j) sum+=x[i][j];\n  }\n cout<<sum;\n return 0; \n} \n"
}, {
	"id": "yd17",
	"hard": "1",
	"input": "1024\n",
	"answer": "11\n",
	"explain": "计算数字二进制表示长度",
	"code": "#include <iostream> \nusing namespace std; \nint main() { \n    int n,cnt=0;\n    cin>>n;\n do {\n  cnt++;\n  n/=2;\n }while(n);\n cout<<cnt<<endl;\n return 0; \n} \n"
}, {
	"id": "yd18",
	"hard": "1",
	"input": "2020\n",
	"answer": "2\n",
	"explain": "判断闰年，输出全年总天数除以7的余数",
	"code": "#include<iostream> \nusing namespace std; \nint main() { \n    int n,sum=0;\n    int x[12]={31,28,31,30,31,30,31,31,30,31,30,31};\n    cin>>n;\n    if(n%400==0||n%100!=0&&n%4==0) x[1]++;\n    for(int i=0;i<12;i++)\n     sum+=x[i];\n    cout<<sum%7;\n return 0; \n} \n"
}, {
	"id": "yd19",
	"hard": "1",
	"input": "103\n",
	"answer": "666\n",
	"explain": "判断质数，是输出666，不是输出0",
	"code": "#include <iostream> \nusing namespace std; \nint main() { \n    int n,flag=1,i=2;\n    cin>>n;\n    while(i*i<=n) {\n     if(n%i==0) flag=0;\n     i++;\n }\n cout<<flag*666<<endl;\n return 0; \n} \n"
}, {
	"id": "yd20",
	"hard": "1",
	"input": "NOIP2019\n",
	"answer": "0\n",
	"explain": "输出字符串中ASCII数值最小的字符",
	"code": "#include <iostream> \nusing namespace std; \nint main() { \n    string s;\n    cin>>s;\n    int k=0,m=s.size();\n    for(int i=m-1;i>0;i--) {\n     if(s[i]<s[k]) k=i;\n }\n cout<<s[k];\n return 0; \n} \n"
}, {
	"id": "yd21",
	"hard": "2",
	"input": "20 12\n",
	"answer": "4\n",
	"explain": "递归求最大公约数",
	"code": "#include <iostream>\nusing namespace std;\nint a,b;\nint work(int a,int b){\n if (a%b)\n  return work(b,a%b);\n return b;\n}\nint main(){\n cin >> a >> b;\n cout << work(a,b) << endl;\n return 0;\n}\n"
}, {
	"id": "yd22",
	"hard": "2",
	"input": "Expo 2010 Shanghai China\n",
	"answer": "120 112\n",
	"explain": "求字符串中ASCII数值最大和第二大的字符，输出ASCII数值",
	"code": "#include<iostream>\n#include<string>\nusing namespace std;\nint main() {\n    string s;\n    char m1,m2;\n    int i;\n    getline(cin,s);\n    m1=' ';\n    m2=' ';\n    for(i=0;i<s.length();i++)\n        if(s[i]>m1)\n        {\n            m2=m1;\n            m1=s[i];\n        }\n        else  if(s[i]>m2)\n           m2=s[i];\n    cout<<int(m1)<<' '<<int(m2)<<endl;\n    return 0;\n}\n"
}, {
	"id": "yd23",
	"hard": "2",
	"input": "7\n",
	"answer": "2\n",
	"explain": "递归，转递归，由边界条件推到n项",
	"code": "#include<iostream>\nusing namespace std;\nconst int NUM=4;\nint r(int n) {\n    int i;\n    if(n<=NUM)\n        return n;\n    for(i=1;i<=NUM;i++)\n        if(r(n-i)<0)\n            return i;\n    return -1;\n}\nint main() {\n    int n;\n    cin>>n;\n    cout<<r(n)<<endl;\n    return 0;\n}\n"
}, {
	"id": "yd24",
	"hard": "2",
	"input": " 11 4 5 6 6 4 3 3 2 3 2 1\n",
	"answer": "3\n",
	"explain": "统计数字出现次数，从小到大计算累加到第几个数字时超过n的一半",
	"code": "#include <iostream>\n#include <cstring>\nusing namespace std;\nconst int SIZE = 100;\nint main() {\n    int n, i, sum, x, a[SIZE];\n    cin >> n;\n    memset(a, 0, sizeof(a));\n    for(i = 1; i <= n; i++) {\n        cin >> x;\n        a[x]++;\n    }\n    i = 0;\n    sum = 0;\n    while(sum < (n / 2 + 1)) {\n        i++;\n        sum += a[i];\n    }\n    cout << i << endl;\n    return 0;\n}\n"
}, {
	"id": "yd25",
	"hard": "2",
	"input": "7\n",
	"answer": "-11\n",
	"explain": "递归，转递推，由边界条件依次推出第n项的值",
	"code": "#include<iostream>\nusing namespace std;\nint fun(int n) {\n if (n == 1)\n  return 1;\n if (n == 2)\n  return 2;\n return fun(n - 2) - fun(n - 1);\n}\nint main() {\n int n;\n cin >> n;\n cout << fun(n) << endl;\n return 0;\n}\n"
}, {
	"id": "yd26",
	"hard": "2",
	"input": null,
	"answer": "Ab\n",
	"explain": "指针运算，理解指针和函数参数传递",
	"code": "#include <iostream> \nusing namespace std; \nvoid fun(char *a, char *b) { \n    a = b; \n    (*a)++; \n} \nint main() { \n    char c1, c2, *p1, *p2; \n    c1 = 'A'; \n    c2 = 'a'; \n    p1 = &c1; \n    p2 = &c2; \n    fun(p1, p2); \n    cout << c1 << c2 << endl; \n    return 0; \n} \n \n \n"
}, {
	"id": "yd27",
	"hard": "2",
	"input": null,
	"answer": "6,5,4,3,2,1,\n",
	"explain": "反转数组，pi，pj指向的元素对调",
	"code": "#include <iostream> \nusing namespace std; \nint main() { \n    int a[6] = {1, 2, 3, 4, 5, 6}; \n    int pi = 0; \n    int pj = 5; \n    int t , i; \n    while (pi < pj) { \n        t = a[pi]; \n        a[pi] = a[pj]; \n        a[pj] = t; \n        pi++; \n        pj--; \n    } \n    for (i = 0; i < 6; i++) \n        cout << a[i] << \",\"; \n    cout << endl; \n    return 0; \n} \n"
}, {
	"id": "yd28",
	"hard": "2",
	"input": null,
	"answer": "=\n",
	"explain": "字符串转大写，比较大小",
	"code": "#include <iostream> \nusing namespace std; \nint main() { \n    int i, length1, length2; \n    string s1, s2; \n    s1 = \"I have a dream.\"; \n    s2 = \"I Have A Dream.\"; \n    length1 = s1.size(); \n    length2 = s2.size(); \n    for (i = 0; i < length1; i++) \n        if (s1[i] >= 'a' && s1[i] <= 'z') \n            s1[i] -= 'a' - 'A'; \n    for (i = 0; i < length2; i++) \n        if (s2[i] >= 'a' && s2[i] <= 'z') \n            s2[i] -= 'a' - 'A'; \n    if (s1 == s2) \n        cout << \"=\" << endl; \n    else if (s1 > s2) \n        cout << \">\" << endl; \n    else \n        cout << \"<\" << endl; \n    return 0; \n} \n \n"
}, {
	"id": "yd29",
	"hard": "2",
	"input": "20\n",
	"answer": "77\n",
	"explain": "输出20以内质数和",
	"code": "#include <iostream> \nusing namespace std; \nint main() { \n    int n,sum=0,i,j;\n    cin>>n;\n    for(i=2;i<=n;i++) {\n     for(j=2;j*j<=i;j++)\n      if(i%j==0) break;\n     if(j*j>i) sum+=i;\n }\n cout<<sum;\n    return 0; \n} \n"
}, {
	"id": "yd30",
	"hard": "2",
	"input": null,
	"answer": "9\n",
	"explain": "先将字符串改写为回文串，然后判断回文，输出i-j的值。i=9,j=0",
	"code": "#include <iostream> \nusing namespace std; \nint main() { \n    string s=\"shanghai\";\n int m,i,j;\n m=s.size();\n for(int i=0;i<m/2;i++)\n  if(s[i]>s[m-1-i]) s[i]=s[m-1-i];\n  else s[m-1-i] = s[i];\n    i=0;j=m-1;\n    while(s[i]==s[j]&&j>=0) i++,j--;\n cout<<i-j; \n    return 0; \n} \n \n"
}, {
	"id": "yd31",
	"hard": "3",
	"input": "7 4\n",
	"answer": "20\n",
	"explain": "递归，转二维地推，画出二维表格，按照递归调用参数，从边界条件依次递推填表求解",
	"code": "#include <iostream>\nusing namespace std;\nint solve(int n, int m) {\n    int i, sum;\n    if (m == 1)\n        return 1;\n    sum = 0;\n    for (i = 1; i < n; i++)\n        sum += solve(i, m - 1);\n    return sum;\n}\nint main() {\n    int n, m;\n    cin>>n>>m;\n    cout<<solve(n, m)<<endl;\n    return 0;\n}\n"
}, {
	"id": "yd32",
	"hard": "3",
	"input": "12 17\n  2 4 6 9 11 15 17 18 19 20 21 25 \n",
	"answer": "7\n",
	"explain": "二分查找，lowerbound查询17的位置",
	"code": "#include <iostream> \nusing namespace std; \nint main() { \n const int SIZE = 100; \n int n, f, i, left, right, middle, a[SIZE]; \n cin>>n>>f; \n for (i = 1; i <= n; i++) \n  cin>>a[i]; \n left = 1; \n right = n; \n do { \n  middle = (left + right) / 2; \n  if (f <= a[middle]) \n   right = middle; \n  else \n   left = middle + 1; \n } while (left < right); \n cout<<left<<endl; \n return 0; \n} \n \n"
}, {
	"id": "yd33",
	"hard": "3",
	"input": "6\n  2 5 3 11 12 4 \n",
	"answer": "4\n",
	"explain": "动态规划，最长上升子序列长度",
	"code": "#include <iostream> \nusing namespace std; \nint main()  { \n const int SIZE = 100; \n int height[SIZE], num[SIZE], n, ans; \n cin>>n; \n for (int i = 0; i < n; i++) { \n  cin>>height[i]; \n  num[i] = 1; \n  for (int j = 0; j < i; j++) { \n   if ((height[j] < height[i]) && (num[j] >= num[i]))  \n   num[i] = num[j]+1; \n  } \n } \n ans = 0; \n for (int i = 0; i < n; i++) { \n  if (num[i] > ans) ans = num[i]; \n } \n cout<<ans<<endl; \n} \n \n"
}, {
	"id": "yd34",
	"hard": "3",
	"input": "30\n",
	"answer": "10\n",
	"explain": "筛法求素数，输出30以内素数的数量",
	"code": "#include<iostream>\nusing namespace std;\nconst int SIZE = 100;\nint main() {\n int p[SIZE];\n int n, tot, i, cn;\n tot = 0;\n cin >> n;\n for (i = 1; i <= n; i++)\n  p[i] = 1;\n for (i = 2; i <= n; i++) {\n  if (p[i] == 1)\n   tot++;\n  cn = i * 2;\n  while (cn <= n) {\n   p[cn] = 0;\n   cn += i;\n  }\n }\n cout << tot << endl;\n return 0;\n} \n"
}, {
	"id": "yd35",
	"hard": "3",
	"input": "1001101011001101101011110001\n",
	"answer": "11\n",
	"explain": "b数组保存从左向右1的数量，t记录从右向左0的数量，枚举位置求左侧1+右侧0数量的最小值",
	"code": "#include<iostream>\nusing namespace std;\nint main() {\n string ch;\n int a[200];\n int b[200];\n int n, i, t, res;\n cin>> ch;\n n = ch.length();\n for (i = 0; i < 200; i++)\n  b[i] = 0;\n for(i = 1; i <= n; i++) {\n  a[i] = ch[i - 1] - '0';\n  b[i] = b[i - 1] + a[i];\n }\n res = b[n];\n t= 0;\n for(i = n; i > 0; i--) {\n  if (a[i] ==0)\n   t++;\n  if (b[i - 1]+ t < res)\n   res = b[i -1] + t;\n }\n cout<< res << endl;\n return 0;\n}\n"
}, {
	"id": "yd36",
	"hard": "3",
	"input": "4 3\n",
	"answer": "1 3\n",
	"explain": "循环，画表格模拟。程序的作用，x数值变化周期1到n，n到1，y变化从1到m，从m到1，当两者同时到达边界，输出x和y的值",
	"code": "#include<iostream>\nusing namespace std;\nint main() {\n int n, m;\n cin>> n >> m;\n int x = 1;\n int y = 1;\n int dx = 1;\n int dy = 1;\n int cnt = 0;\n while(cnt != 2) {\n  cnt = 0;\n  x = x + dx;\n  y = y + dy;\n  if (x == 1|| x == n) {\n   ++cnt;\n   dx = -dx;\n  }\n  if (y == 1|| y == m) {\n   ++cnt;\n   dy = -dy;\n  }\n }\n cout << x << \" \" << y<< endl;\n return 0;\n}\n"
}, {
	"id": "yd37",
	"hard": "3",
	"input": "5 6\n",
	"answer": "  0  1  2  3  4  5  6\n\n  1  0  3  2  5  4  7\n\n  2 -1  4  1  6  3  8\n\n  0  1  2  3  4  5  6\n\n  1  0  3  2  5  4  7\n\n  2 -1  4  1  6  3  8\n\n",
	"explain": "",
	"code": "#include<iostream>\n#include<iomanip>\nusing namespace std;\nint n,m;\nint findans(int n, int m) {\n if(n==0) return m;\n if(m==0) return n%3;\n return findans(n-1,m)-findans(n,m-1)+findans(n-1,m-1);\n}\nint main() {\n cin>>n>>m;\n for(int i=0;i<=n;i++) {\n  for(int j=0;j<=m;j++) {\n   cout<<setw(3)<<findans(i,j);\n  }\n  cout<<endl;\n }\n return 0;\n}\n"
}, {
	"id": "yd38",
	"hard": "3",
	"input": "10 7 1 4 3 2 5 9 8 0 6\n",
	"answer": "6\n",
	"explain": "统计图中连通块的数量。V顶点访问标志，边(i,d[i])",
	"code": "#include <cstdio>\nint n, d[100];\nbool v[100];\nint main() {\n scanf(\"%d\", &n);\n for (int i = 0; i < n; ++i) {\n  scanf(\"%d\", d + i);\n  v[i] = false;\n }\n int cnt = 0;\n for (int i = 0; i < n; ++i) {\n  if (!v[i]) {\n   for (int j = i; !v[j]; j = d[j]) {\n    v[j] = true;\n   }\n   ++cnt;\n  }\n }\n printf(\"%d\", cnt);\n return 0;\n}\n"
}, {
	"id": "yd39",
	"hard": "3",
	"input": "7\n",
	"answer": "0 1 2 4 6 3 5 \n",
	"explain": "图的广度优先遍历",
	"code": "#include<iostream>\nusing namespace std;\nconst int N=105;\nint n;\nbool g[N][N], vst[N]; \nint d[N],h,t,x;\nvoid dfs(int p) {\n vst[p]=1;\n cout<<p<<\" \";\n for(int q=0; q<n; q++) {\n  if(g[p][q] && !vst[q])\n   dfs(q);\n }\n}\nint main(){\n cin>>n;\n for(int i=0;i<n;i++)\n  for(int j=0;j<n;j++)\n   if(i%2==j%2) g[i][j]=1; \n g[0][1]=1;\n d[t++]=0; vst[0]=1;\n while(h<t) {\n  x=d[h++];\n  cout<<x<<\" \";\n  for(int j=0;j<n;j++) \n   if(!vst[j]&&g[x][j]) {\n    vst[j]=1;\n    d[t++]=j;\n   }\n }\n return 0;\n}\n"
}, {
	"id": "yd40",
	"hard": "3",
	"input": "7\n",
	"answer": "0 2 4 6 5 1 3 \n",
	"explain": "图的深度优先遍历",
	"code": "#include<iostream>\nusing namespace std;\nconst int N=105;\nint n;\nbool g[N][N], vst[N]; \nvoid dfs(int p) {\n vst[p]=1;\n cout<<p<<\" \";\n for(int q=0; q<n; q++) {\n  if(g[p][q] && !vst[q])\n   dfs(q);\n }\n}\nint main(){\n cin>>n;\n for(int i=0;i<n;i++)\n  for(int j=0;j<n;j++)\n   if(i%2==j%2) g[i][j]=1; \n g[n-1][n-2]=1;\n dfs(0);\n return 0;\n}\n"
}]
